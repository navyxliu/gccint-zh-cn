@c Copyright (C) 2002 Free Software Foundation, Inc.
@c This is part of the GCC manual.
@c For copying conditions, see the file gcc.texi.

@node Languages
@chapter Language Front Ends in GCC

GCC中的语言前端接口，特别是 @code{tree} 结构（@pxref{Trees}），起初是为C设计的，在许多方面仍然有些偏向于C和类C的语言。尽管如此，这种设计也相当适合于其它的过程语言，而且GCC已经拥有了许多这样的语言前端。

写一个编译器作为GCC的前端，而不是直接编译成汇编或者生成供GCC编译的C代码，具有多个优势：

@itemize @bullet
@item GCC的前端可以受益于GCC中已有的对众多不同目标机器的支持。
@item GCC的前端可以受益于GCC中的所有优化。其中的一些优化，例如别名分析，在GCC直接编译源代码时比编译生成的C代码效果更好。
@item 直接编译源代码能够比编译通过中间生成的C代码产生更好的调试信息。
@end itemize

正是因为有这些编写一个编译器作为GCC前端的好处，所以也有与GCC设计目标差异极大的语言前端被创建，例如陈述式的逻辑/功能语言Mercury。由于这些原因，实现针对特殊目的（例如，作为研究项目的一部分）的编译器作为GCC前端也是有用的。
