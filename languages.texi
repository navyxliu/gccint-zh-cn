@c Copyright (C) 2002 Free Software Foundation, Inc.
@c This is part of the GCC manual.
@c For copying conditions, see the file gcc.texi.

@node 语言
@chapter GCC中的语言前端

GCC中的语言前端接口，特别是 @code{tree} 结构（参见 @ref{Trees}），起初是为C
设计的，在许多方面仍然有些偏向于C和类C的语言。尽管如此，这种设计也相当适合于其它的过程语言，而且GCC已经拥有了许多这样的语言前端。

为GCC写一个前端编译器，而不是直接编译成汇编或者生成C代码然后再用GCC编译，
具有多个优势：

@itemize @bullet
@item GCC前端可以受益于GCC中已有的对众多不同目标机器的支持。
@item GCC前端可以受益于GCC中的所有优化。其中一些优化，例如别名分析，
在GCC直接编译源代码时要比编译生成的C代码效果更好。
@item 直接编译源代码能够比编译中间生成的C代码产生更好的调试信息。
@end itemize

正是由于为GCC编写一个前端编译器有这些优势，使得也有与GCC设计差异很大的语言前端
被创建，例如声明式的逻辑/功能语言
（declarative logic/functional language）Mercury。由于这些原因，
实现针对特殊目的（例如，作为研究项目的一部分）编译器作为GCC前端也是有用的。
