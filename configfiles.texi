@c Copyright (C) 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
@c 1999, 2000, 2001, 2002, 2010 Free Software Foundation, Inc.
@c This is part of the GCC manual.
@c For copying conditions, see the file gcc.texi.

@en @node Configuration Files
@en @subsubsection Files Created by @code{configure}
@node Configuration Files
@subsubsection 由@code{configure}创建的文件

@en Here we spell out what files will be set up by @file{configure} in the
@en @file{gcc} directory.  Some other files are created as temporary files
@en in the configuration process, and are not used in the subsequent
@en build; these are not documented.
我们在这里说明了在@file{gcc}目录下哪些文件将会由@file{configure}创建。其它一些文件是在配置过程中生成的临时文件，而且在后续的构建过程中没有被用到，就不在这里介绍了。

@en @itemize @bullet
@en @item
@en @file{Makefile} is constructed from @file{Makefile.in}, together with
@en the host and target fragments (@pxref{Fragments, , Makefile
@en Fragments}) @file{t-@var{target}} and @file{x-@var{host}} from
@en @file{config}, if any, and language Makefile fragments
@en @file{@var{language}/Make-lang.in}.
@en @item
@en @file{auto-host.h} contains information about the host machine
@en determined by @file{configure}.  If the host machine is different from
@en the build machine, then @file{auto-build.h} is also created,
@en containing such information about the build machine.
@en @item
@en @file{config.status} is a script that may be run to recreate the
@en current configuration.
@en @item
@en @file{configargs.h} is a header containing details of the arguments
@en passed to @file{configure} to configure GCC, and of the thread model
@en used.
@en @item
@en @file{cstamp-h} is used as a timestamp.
@en @item
@en @file{gccbug}, a script for reporting bugs in GCC, is constructed from
@en @file{gccbug.in}.
@en @item
@en If a language @file{config-lang.in} file (@pxref{Front End Config, ,
@en The Front End @file{config-lang.in} File}) sets @code{outputs}, then
@en the files listed in @code{outputs} there are also generated.
@en @end itemize
@itemize @bullet
@item
@file{Makefile}是由@file{Makefile.in}、@file{config}目录下的主机与目标机片断(@pxref{Fragments, , Makefile Fragments}) @file{t-@var{target}}和@file{x-@var{host}}共同构造出来的，根据情况可能还会用到Makefile语言片断@file{@var{language}/Make-lang.in}。
@item
@file{auto-host.h}包含了由@file{configure}确定的主机信息。如果主机和构建机不同，则@file{suto-build.h}也会被创建，其包含了关于构建机的信息。
@item
@file{config.status}脚本，可以用来运行并重新创建当前配置。
@item
@file{configargs.h}头文件，包含了传给@file{configure}来配置GCC的详细参数，以及使用的线程模式。
@item
@file{cstamp-h}作为时间戳使用。
@item
@file{fixinc/Makefile}由@file{fixinc/Makefile.in}创建。
@item
@file{gccbug}, 用来报告GCC bugs的脚本，由@file{gccbug.in}创建。
@item
@file{intl/Makefile}由@file{intl/Makefile.in}创建。
@item
如果语言相关的@file{config-lang.in}文件(@pxref{Front End Config, ,The Front End @file{config-lang.in} File})设置了@code{outputs}，则在@code{outputs}中列出的文件也会被创建。
@end itemize

@en The following configuration headers are created from the Makefile,
@en using @file{mkconfig.sh}, rather than directly by @file{configure}.
@en @file{config.h}, @file{bconfig.h} and @file{tconfig.h} all contain the
@en @file{xm-@var{machine}.h} header, if any, appropriate to the host,
@en build and target machines respectively, the configuration headers for
@en the target, and some definitions; for the host and build machines,
@en these include the autoconfigured headers generated by
@en @file{configure}.  The other configuration headers are determined by
@en @file{config.gcc}.  They also contain the typedefs for @code{rtx},
@en @code{rtvec} and @code{tree}.
下列配置头文件是由Makefile通过使用@file{mkconfig.sh}，而不是直接通过@file{configure}来创建的。@file{config.h}，@file{bconfig.h}和@file{tconfig.h}都包含@file{xm-@var{machine}.h}头文件，如果存在的话，分别对应于host, build和target机器。对于target，是一些配置头文件和一些定义；对于host和build机器，这些包括由@file{configure}生成的自动配置头文件。其它配置头文件由@file{config.gcc}来确定。它们也包含@code{rtx}，@code{rtvec}和@code{tree}的typedef定义。

@en @itemize @bullet
@en @item
@en @file{config.h}, for use in programs that run on the host machine.
@en @item
@en @file{bconfig.h}, for use in programs that run on the build machine.
@en @item
@en @file{tconfig.h}, for use in programs and libraries for the target
@en machine.
@en @item
@en @file{tm_p.h}, which includes the header @file{@var{machine}-protos.h}
@en that contains prototypes for functions in the target @file{.c} file.
@en FIXME: why is such a separate header necessary?
@en @end itemize
@itemize @bullet
@item
@file{config.h}, 供运行在host机器上的程序使用。 
@item
@file{bconfig.h}, 供运行在build机器上的程序使用。
@item
@file{tconfig.h}, 供运行在target机器上的程序和库使用。
@item
@file{tm_p.h}, 包括了含有target机器上@file{.c}
文件中的函数原形的头文件@file{@var{machine}-protos.h}。
FIXME：为什么需要这样一个独立的头文件？
@end itemize
